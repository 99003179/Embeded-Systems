int ct = 5;      
 
//the time when the sensor outputs a low impulse
long unsigned int lowIn;        
 
//the amount of milliseconds the sensor has to be low so as to get the standardiazation of output//
//before we assume all motion has stopped
long unsigned int pause = 5000;
 
boolean lockLow = true;
boolean takeLowTime;
 
int PP = 3;    //the digital pin connected to the PIR sensor's output
int LP = 10;
 
 
/////////////////////////////
//SETUP
void setup(){
  Serial.begin(9600);
  pinMode(PP, INPUT);
  pinMode(LP, OUTPUT);
  digitalWrite(PP, LOW);
 
  //give the sensor some time to calibrate
  Serial.print("calibrating sensor ");
    for(int g = 0; g < ct; g++){
      Serial.print(".");
      delay(500);
      }
    Serial.println(" done");
    Serial.println("SENSOR ACTIVE");
    delay(100);
  }
 
////////////////////////////
//LOOP
void loop(){
 
     if(digitalRead(PP) == HIGH){
       digitalWrite(LP, HIGH);   //the led visualizes the sensors output pin state
       if(lockLow){
         //makes sure we wait for a transition to LOW before any further output is made:
         lockLow = false;          
         Serial.println("---");
         Serial.print("detected: ");
         Serial.print(millis()/1000);
         Serial.println(" sec");
         delay(100);
         }        
         takeLowTime = true;
       }
 
     if(digitalRead(PP) == LOW){      
       digitalWrite(LP, LOW);  //the led visualizes the sensors output pin state
 
       if(takeLowTime){
        lowIn = millis();          //save the time of the transition from high to LOW
        takeLowTime = false;       //make sure this is only done at the start of a LOW phase
        }
       //if the sensor is low for more than the given pause,
       //we assume that no more motion is going to happen
       if(!lockLow && millis() - lowIn > pause){
           //makes sure this block of code is only executed again after
           //a new motion sequence has been detected
           lockLow = true;                      
           Serial.print(" ended");      //output
           Serial.print((millis() - pause)/1000);
           Serial.println(" sec");
           delay(50);
           }
       }
  }

